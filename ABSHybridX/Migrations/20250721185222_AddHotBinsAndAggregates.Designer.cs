// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace ABSHybridX.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250721185222_AddHotBinsAndAggregates")]
    partial class AddHotBinsAndAggregates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Aggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AggregateId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("HotBinId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotBinId")
                        .IsUnique()
                        .HasFilter("[HotBinId] IS NOT NULL");

                    b.ToTable("Aggregates");
                });

            modelBuilder.Entity("Entities.Models.HotBin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HotBinId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HotBins");
                });

            modelBuilder.Entity("Entities.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBatchSizeFixed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("LowerTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<int>("MixTemperature")
                        .HasColumnType("int");

                    b.Property<int>("MixTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UpperTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatchSize = 3000,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBatchSizeFixed = true,
                            IsValid = true,
                            LowerTemperatureDeviation = 15,
                            MixTemperature = 130,
                            MixTime = 25,
                            Name = "120A103Z",
                            Title = "WARM AC 32 DENSE BASE 40/60 (HYBRID)",
                            UpperTemperatureDeviation = 40,
                            VersionNumber = 7
                        });
                });

            modelBuilder.Entity("Entities.Models.Aggregate", b =>
                {
                    b.HasOne("Entities.Models.HotBin", "HotBin")
                        .WithOne("Aggregate")
                        .HasForeignKey("Entities.Models.Aggregate", "HotBinId");

                    b.Navigation("HotBin");
                });

            modelBuilder.Entity("Entities.Models.HotBin", b =>
                {
                    b.Navigation("Aggregate");
                });
#pragma warning restore 612, 618
        }
    }
}
